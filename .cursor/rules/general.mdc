---
description: Rules applicable to the entire project
globs: 
alwaysApply: true
---
Technologies:

- Tauri v2 (Safari + Chromium based browsers only, never Firefox)
- Radix UI
- Lexical text editor
- NOT TAILWIND, DO NOT ADD ANY TAILWIND TO THIS PROJECT

Keep it short:
- After making a series of changes, just say "done."
- NEVER EXPLAIN TO ME WHY A CHANGE IS GOOD. I know why it is good. I am smart, treat me like I already know things. Never include a section like "benefits of the new approach" or "reasons why this new approach is better." I DO NOT NEED IT, it makes my job HARDER.
- When summarizing what you've done, be as concise as possible. Omit needless words. I will just read your diff. I am smart.
- Avoid summarizing code. Say as little as possible after each change. Only point out things I wouldn't notice myself by reading the code.

Few changes:
- Never do an incidental refactor; only accomplish the task at hand and move on. If a refactor is required to accomplish a task, confirm first.
- Generally I am looking for changes under 200 lines, like a tightly scoped pull request. I prefer incremental, multi-stage development rather than all-at-once.

Strategy:
- If you find yourself saying "Let's completely rethink our approach," CHECK IN WITH ME before going off and changing lots of code.
- A common problem with LLMs is flapping back and forth between two approaches that don't work without stopping. Don't do that. Just stop and ask before changing approaches.

Notes on files: 

- The path to the sqlite file is '/Users/steve/Library/Application Support/com.notesponge.app/notesponge.db'
- App.tsx is the main entry point. It controls the overall layout of the app.
- Settings.tsx handles the settings window, and is created by settings.tsx and settings.html.
- actions.ts contains mutation code. bootstrap_schema.ts contains the SQL schema.
- src/styles/index.css contains design tokens and utility classes, and is used in most components.
- The database schema is defined in Rust using SQLite migrations. The source of truth for the schema is in `src-tauri/migrations/01-initial-schema.sql`. SQLite PRAGMAs are set in the Rust code in `src-tauri/src/lib.rs`.

In order to add a new kind of window:

1. Create a new .html file at the repo root
2. Create a corresponding .tsx file in src/, and a React component under src/components

Helpful commands:

- Build to verify a set of TypeScript changes: `bun run build`
- Build to verify a set of Rust changes: `bun run cargo-check`
- Build to verify a set of Rust and/or TypeScript changes: `bun run tauri build --no-bundle`

CSS guidelines:
- You may use all features of CSS and JavaScript in the very latest version of Safari (not Chrome or Firefox). Safari is our target browser.
- Nested CSS syntax is allowed using the official WHATWG CSS nesting syntax spec (& { ... })
- Use BEM naming for all CSS adjacent to individual React components, where blocks and elements are CamelCase.
- The root of every React component should have a CSS class which exactly matches the name of the component, unless the root element does not take a className parameter.
